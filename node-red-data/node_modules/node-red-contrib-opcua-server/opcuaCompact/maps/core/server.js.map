{"version":3,"sources":["core/server.js"],"names":["module","exports","nodeOpcuaServer","require","choreCompact","de","bianco","royal","compact","debugLog","opcuaServerDebug","detailLog","opcuaServerDetailsDebug","errorLog","opcuaErrorDebug","readConfigOfServerNode","node","config","name","endpoint","productUri","alternateHostname","maxAllowedSubscriptionNumber","maxNodesPerRead","maxNodesPerWrite","maxNodesPerHistoryReadData","maxNodesPerBrowse","maxBrowseContinuationPoints","maxHistoryContinuationPoints","delayToInit","delayToClose","showStatusActivities","showErrors","serverShutdownTimeout","publicCertificateFile","privateCertificateFile","opcuaUsers","allowAnonymous","users","registerServerMethod","xmlsetsOPCUA","isAuditing","disableDiscovery","serverDiscovery","initialize","options","stop","capabilitiesForMDNS","server","done","shutdown","RegisterServerMethod","opcua","OPCUAServer","xmlFiles","getRegisterServerMethod","forEach","path","loadOPCUANodeSets","dirname","push","xmlsetFileName","nodesets","standard","opcuaNodesets","di","startsWith","join","defaultServerOptions","certificateFile","toString","operationLimits","coreSecurity","serverCertificateFile","applicationName","port","parseInt","resourcePath","buildInfo","gatewayServerUri","discoveryProfileUri","discoveryUrls","buildDate","Date","maxAllowedSessionNumber","maxConnectionsPerEndpoint","privateKeyFile","isValidUser","checkUserLogon","text","locale","constructAddressSpaceFromScript","resolve","postInitialize","userManager","eventObjects","catch","Promise","err","reject","engine","addressSpace","endpointDescriptions","contribOPCUACompact","_opcuaServer$engine","opcuaServer","then","setStatusActive","channel","setStatusError","message","on","run","start","endpoints","length","endpointDescription","endpointUrl","securityMode","session","securityPolicyUri","remoteAddress","remotePort","clientDescription","applicationUri","applicationType","sessionName","sessionTimeout","sessionId","reason","serverInfo","JSON","stringify"],"mappings":"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","file":"../../core/server.js","sourcesContent":["/**\n MIT License\n Copyright (c) 2018-2022 Klaus Landsdorf (http://node-red.plus/)\n Copyright (c) 2019 Sterfive (https://www.sterfive.com/)\n **/\n\"use strict\";\n\nmodule.exports = {\n  nodeOpcuaServer: require(\"node-opcua-server/dist/opcua_server\"),\n  choreCompact: require(\"./chore\").de.bianco.royal.compact,\n  debugLog: require(\"./chore\").de.bianco.royal.compact.opcuaServerDebug,\n  detailLog: require(\"./chore\").de.bianco.royal.compact.opcuaServerDetailsDebug,\n  errorLog: require(\"./chore\").de.bianco.royal.compact.opcuaErrorDebug,\n  readConfigOfServerNode: (node, config) => {\n    node.name = config.name;\n\n    // network\n    node.port = config.port;\n    node.endpoint = config.endpoint;\n    node.productUri = config.productUri;\n    node.alternateHostname = config.alternateHostname;\n\n    // limits\n    node.maxAllowedSessionNumber = config.maxAllowedSessionNumber;\n    node.maxConnectionsPerEndpoint = config.maxConnectionsPerEndpoint;\n    node.maxAllowedSubscriptionNumber = config.maxAllowedSubscriptionNumber;\n    node.maxNodesPerRead = config.maxNodesPerRead;\n    node.maxNodesPerWrite = config.maxNodesPerWrite;\n    node.maxNodesPerHistoryReadData = config.maxNodesPerHistoryReadData;\n    node.maxNodesPerBrowse = config.maxNodesPerBrowse;\n    node.maxBrowseContinuationPoints = config.maxBrowseContinuationPoints;\n    node.maxHistoryContinuationPoints = config.maxHistoryContinuationPoints;\n\n    node.delayToInit = config.delayToInit;\n    node.delayToClose = config.delayToClose;\n    node.serverShutdownTimeout = config.serverShutdownTimeout;\n    node.showStatusActivities = config.showStatusActivities;\n    node.showErrors = config.showErrors;\n\n    // certificates\n    node.publicCertificateFile = config.publicCertificateFile;\n    node.privateCertificateFile = config.privateCertificateFile;\n\n    // Security\n    node.allowAnonymous = config.allowAnonymous;\n    // User Management\n    node.opcuaUsers = config.users;\n    // XML-Set Management\n    node.xmlsetsOPCUA = config.xmlsetsOPCUA;\n    // Audit\n    node.isAuditing = config.isAuditing;\n\n    // discovery\n    node.disableDiscovery = !config.serverDiscovery;\n    node.registerServerMethod = config.registerServerMethod;\n    node.discoveryServerEndpointUrl = config.discoveryServerEndpointUrl;\n\n    /* istanbul ignore next */\n    node.capabilitiesForMDNS = config.capabilitiesForMDNS\n      ? config.capabilitiesForMDNS.split(\",\")\n      : [config.capabilitiesForMDNS];\n\n    return node;\n  },\n  initialize: (node, options) => {\n    return new module.exports.choreCompact.opcua.OPCUAServer(options);\n  },\n  stop: (node, server, done) => {\n    server.shutdown(node.serverShutdownTimeout, done);\n  },\n  getRegisterServerMethod: (id) => {\n    const RegisterServerMethod = require(\"node-opcua\").RegisterServerMethod;\n    return RegisterServerMethod[id];\n  },\n  loadOPCUANodeSets: (node, dirname) => {\n    const xmlFiles = [\n      module.exports.choreCompact.opcuaNodesets.nodesets.standard,\n      module.exports.choreCompact.opcuaNodesets.nodesets.di,\n    ];\n\n    if (Array.isArray(node.xmlsetsOPCUA)) {\n      node.xmlsetsOPCUA.forEach((xmlsetFileName) => {\n        if (xmlsetFileName.path) {\n          if (xmlsetFileName.path.startsWith(\"public/vendor/\")) {\n            xmlFiles.push(\n              module.exports.choreCompact.path.join(\n                dirname,\n                xmlsetFileName.path\n              )\n            );\n          } else {\n            /* istanbul ignore next */\n            xmlFiles.push(xmlsetFileName.path);\n          }\n        }\n      });\n      module.exports.detailLog(\"appending xmlFiles: \" + xmlFiles.toString());\n    }\n\n    module.exports.detailLog(\"node sets:\" + xmlFiles.toString());\n\n    return xmlFiles;\n  },\n  defaultServerOptions: (node) => {\n    /* const applicationUri = module.exports.choreCompact.opcua.makeApplicationUrn(\n      module.exports.choreCompact.opcua.get_fully_qualified_domain_name(),\n      node.productUri || \"NodeOPCUA-Server-\" + node.port\n    );\n     */\n\n    const certificateFile =\n      node.publicCertificateFile ||\n      module.exports.choreCompact.coreSecurity.serverCertificateFile(\"2048\");\n    const privateKeyFile =\n      node.privateCertificateFile ||\n      module.exports.choreCompact.coreSecurity.serverKeyFile(\"2048\");\n\n    // const SecurityPolicy = require(\"node-opcua\").SecurityPolicy;\n    const registerServerMethod = 1; /* module.exports.getRegisterServerMethod(\n      node.registerServerMethod\n    ) || 1; */\n\n    return {\n      port: typeof node.port === \"string\" ? parseInt(node.port) : node.port,\n      // TODO: options to activate sets: nodeset_filename: module.exports.choreCompact.opcuaNodesets.nodesets.,\n      resourcePath: node.endpoint || \"/UA/NodeRED/Compact\",\n      buildInfo: {\n        productName: \"Node-RED OPC UA Compact Server\",\n        buildNumber: \"20220731\",\n        buildDate: new Date(2022, 7, 31),\n      },\n      serverCapabilities: {\n        maxBrowseContinuationPoints: node.maxBrowseContinuationPoints,\n        maxHistoryContinuationPoints: node.maxHistoryContinuationPoints,\n        operationLimits: {\n          maxNodesPerRead: node.maxNodesPerRead,\n          maxNodesPerWrite: node.maxNodesPerWrite,\n          maxNodesPerHistoryReadData: node.maxNodesPerHistoryReadData,\n          maxNodesPerBrowse: node.maxNodesPerBrowse,\n        },\n      },\n      serverInfo: {\n        // applicationUri,\n        productUri: node.productUri || \"NodeOPCUA-Server-\" + node.port,\n        applicationName: { text: \"NodeRED-Compact\", locale: \"en\" },\n        gatewayServerUri: null,\n        discoveryProfileUri: null,\n        discoveryUrls: [],\n      },\n      alternateHostname: node.alternateHostname,\n      maxAllowedSessionNumber: node.maxAllowedSessionNumber,\n      maxConnectionsPerEndpoint: node.maxConnectionsPerEndpoint,\n      allowAnonymous: node.allowAnonymous,\n      /* securityPolicies: [ TODO: configure SecurityPolicies\n        SecurityPolicy.Basic128Rsa15,\n        SecurityPolicy.Basic256,\n        SecurityPolicy.Basic256Sha256\n      ], */\n      certificateFile,\n      privateKeyFile,\n      userManager: {\n        isValidUser: module.exports.choreCompact.coreSecurity.checkUserLogon,\n      },\n      isAuditing: node.isAuditing,\n      disableDiscovery: node.disableDiscovery,\n      registerServerMethod,\n    };\n  },\n  constructAddressSpaceFromScript: (\n    server,\n    constructAddressSpaceScript,\n    eventObjects\n  ) => {\n    return new Promise(function (resolve, reject) {\n      try {\n        constructAddressSpaceScript(\n          server,\n          server.engine.addressSpace,\n          eventObjects,\n          resolve\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n  },\n  postInitialize: (node, opcuaServer) => {\n    node.contribOPCUACompact.eventObjects = {}; // event objects should stay in memory\n\n    const addressSpace = opcuaServer.engine?.addressSpace;\n    if (addressSpace) {\n      addressSpace.getOwnNamespace();\n    }\n\n    module.exports\n      .constructAddressSpaceFromScript(\n        opcuaServer,\n        node.contribOPCUACompact.constructAddressSpaceScript,\n        node.contribOPCUACompact.eventObjects\n      )\n      .then(() => {\n        module.exports.choreCompact.setStatusActive(node);\n        node.emit(\"server_running\");\n      })\n      .catch((err) => {\n        module.exports.choreCompact.setStatusError(node, err.message);\n        node.emit(\"server_start_error\");\n      });\n  },\n  run: (node, server) => {\n    return new Promise(function (resolve, reject) {\n      server.start(function (err) {\n        if (err) {\n          reject(err);\n        } else {\n          if (server.endpoints && server.endpoints.length) {\n            server.endpoints.forEach((endpoint) => {\n              endpoint.endpointDescriptions().forEach((endpointDescription) => {\n                module.exports.debugLog(\n                  \"Server endpointUrl: \" +\n                    endpointDescription.endpointUrl +\n                    \" securityMode: \" +\n                    endpointDescription.securityMode.toString() +\n                    \" securityPolicyUri: \" +\n                    endpointDescription.securityPolicyUri\n                    ? endpointDescription.securityPolicyUri.toString()\n                    : \"None Security Policy Uri\"\n                );\n              });\n            });\n\n            const endpointUrl =\n              server.endpoints[0].endpointDescriptions()[0].endpointUrl;\n            module.exports.debugLog(\n              \"Primary Server Endpoint URL \" + endpointUrl\n            );\n          }\n\n          /* istanbul ignore next */\n          server.on(\"newChannel\", (channel) => {\n            module.exports.debugLog(\n              \"Client connected with address = \" +\n                channel.remoteAddress +\n                \" port = \" +\n                channel.remotePort\n            );\n          });\n\n          /* istanbul ignore next */\n          server.on(\"closeChannel\", function (channel) {\n            module.exports.debugLog(\n              \"Client disconnected with address = \" +\n                channel.remoteAddress +\n                \" port = \" +\n                channel.remotePort\n            );\n          });\n\n          /* istanbul ignore next */\n          server.on(\"create_session\", function (session) {\n            module.exports.debugLog(\n              \"############## SESSION CREATED ##############\"\n            );\n            if (session.clientDescription) {\n              module.exports.detailLog(\n                \"Client application URI:\" +\n                  session.clientDescription.applicationUri\n              );\n              module.exports.detailLog(\n                \"Client product URI:\" + session.clientDescription.productUri\n              );\n              module.exports.detailLog(\n                \"Client application name:\" +\n                  session.clientDescription.applicationName\n                  ? session.clientDescription.applicationName.toString()\n                  : \"none application name\"\n              );\n              module.exports.detailLog(\n                \"Client application type:\" +\n                  session.clientDescription.applicationType\n                  ? session.clientDescription.applicationType.toString()\n                  : \"none application type\"\n              );\n            }\n\n            module.exports.debugLog(\n              \"Session name:\" + session.sessionName\n                ? session.sessionName.toString()\n                : \"none session name\"\n            );\n            module.exports.debugLog(\n              \"Session timeout:\" + session.sessionTimeout\n            );\n            module.exports.debugLog(\"Session id:\" + session.sessionId);\n          });\n\n          /* istanbul ignore next */\n          server.on(\"session_closed\", function (session, reason) {\n            module.exports.debugLog(\n              \"############## SESSION CLOSED ##############\"\n            );\n            module.exports.detailLog(\"reason:\" + reason);\n            module.exports.detailLog(\n              \"Session name:\" + session.sessionName\n                ? session.sessionName.toString()\n                : \"none session name\"\n            );\n          });\n\n          module.exports.debugLog(\"Server Initialized\");\n\n          if (server.serverInfo) {\n            module.exports.detailLog(\n              \"Server Info:\" + JSON.stringify(server.serverInfo)\n            );\n          }\n\n          resolve();\n        }\n      });\n    });\n  },\n};\n"]}